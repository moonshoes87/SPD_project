def magic_read(self,infile):  # called from  self.get_data.  reads magic file and returns a dictionary

This is how the data gets parsed and whatever within thellier_GUI:

class Arai_GUI(wx.Frame):

default self.magic_file = ./magic_measurements.txt # this is how self.get_data functions on initialization

def on_menu_open_magic_file(self, event):
...
	self.Data = self.get_data()  # this is the key one
		  calls self.magic_read() # parses file and returns data dictionary
		  also self.get_specs() # parses file and returns list (?) of specimen names
	self.Data_info=self.get_data_info()

ultimately returns Data
...


I probably want to use def get_PI_parameters().  However, it appears (possibly) that one must do both self.get_data and then self.get_PI_parameters.  At the start of self.get_data, self.Data = {}.  However, at the start of self.get_PI_parameters(), self.Data is referenced as if it were full.  So....



  #      self.pars['magic_method_codes']=Data[self.s]['pars']['magic_method_codes']                           
        # for some reason missing any magic_method_codes.  possibly these would have been incorporated into the data from rmag_anisotr
opy or something                                                                                                                     
    # magic_method codes are locked up in datablock, not actually extracted.  not sure if this happens somewhere else in thellier_\
gui or not                                         
There's some stuff in the code like:

        for rec in self.Data[self.s]['datablock']:
          if "LT-NO" in rec['magic_method_codes']:
              nrm0= "%.2e"%float(rec['measurement_magn_moment'])
              break

But nowhere do the magic_method codes get pulled out and organized
                                                                             
        # also, fix the weirdness of having to set the precise number for tmin and tmax    

       
sequence to get Data to feed into spd.py:
	 >>> import lj_thellier_gui_spd as tgs
	 >>> tgs
	 <module 'lj_thellier_gui_spd' from 'lj_thellier_gui_spd.py'>
	 >>> gui = tgs.Arai_GUI()
	 __init__ Arai_gui instance
	 .....	 
	>>> gui.Data
	.... (necessary Data for spd.py)
	thing = gui.get_PI_parameters(gui.s, 273, 798)

or:
	import new_lj_thellier_gui_spd as tgs
	gui = tgs.Arai_GUI()
	data = gui.Data
	specimen = gui.s
	import spd
	thing = spd.PintPars(data, specimen, 273, 798)
	thing.calculate_all_statistics()

In these two examples, thing appears to be the same

The temperature selector bar thing is in kelvin, but tmin, tmax are in C.  hahahahaha.  

don't forget array behavior options (linspace, arange, etc.)

in lj_thellier_gui_spd

added this into get_data()
self.s = self.specimens[0]  # LORI WEIRD ADDITION 
Will need to change this so that you can select which, or for all, specimens to get_data

Current statistics are all correct between self.Data[self.s]['pars'] and self.pars, although there are fewer in self.pars.Possibly I should simplify what happens in get_data().  



Next steps:
It would be nice to take Data out of the PintPars object.  Figure out what is needed, and embed that more directly into the object.  DONE
Walk through get PI parameters....DONE
Walk through get data
fix the thing between dir2cart, cart2dir, etc. DONE
remove needless functions DONE
figure out if need er_ages, etc.
figure out version of EPD
figure out difference betwixt read_magic_file()
how does dec., inc., etc., get turned into x, y Arai coordinates??  this is probs done in sortarai()



read_magic_file()
  Neither does anything for me currently.  

  # read_magic_file takes 2 args.  not a class method.  
      currently called for: er_ages, er_specimens, and er_samples
  # (renamed) classy_read_magic_file takes 4 args (including self).  is class method.
      currently called only for pmag_specimens



get_data() calls:

read_magic_file()

def get_specs(self,data):

read_magic_file() returns data from a magic_measurements file that looks like this:

magic file: /Users/nebula/Python/SPD_project/magic_measurements.txt
calling magic_read(self, infile) /Users/nebula/Python/SPD_project/magic_measurements.txt
magic data:
[{'treatment_ac_field': '0', 'treatment_dc_field_theta': '90', 'measurement_temp': '273', 'er_citation_names': 'This study', 'measurement_magn_moment': '2.01e-09', 'treatment_temp': '273', 'measurement_number': '1', 'measurement_standard': 'u', 'er_site_name': '0238x', 'er_sample_name': '0238x601104', 'treatment_dc_field_phi': '0', 'measurement_inc': '-8.8', 'er_location_name': '238', 'measurement_dec': '257.6', 'magic_experiment_name': '0238x6011043:LP-PI-TRM:LP-PI-ALT-PTRM:LP-PI-BT-MD:LP-PI-BT...
file_type magic_measurements
	  returns a dictionary and a string

def get_specs(self,data):
        """                                                                                                                            
         takes a magic format file and returns a list of unique specimen names                                                         
        """






>>> import new_lj_thellier_gui_spd as tgs
>>> gui = tgs.Arai_GUI()
 calling __init__ Arai_gui instance
calling get_default_criteria()
calling read_criteria_from_file
calling get_default_criteria()
calling get_data_info()
Calling read_magic_file() in get_data_info
/Users/nebula/Python/SPD_project/er_samples.txt
-W- Cant find er_sample.txt in project directory

Calling read_magic_file() in get_data_info
/Users/nebula/Python/SPD_project/er_sites.txt
-W- Cant find er_sites.txt in project directory

Calling read_magic_file() in get_data_info
/Users/nebula/Python/SPD_project/er_ages.txt
Calling read_magic_file() in get_data_info
/Users/nebula/Python/SPD_project/er_ages.txt
-W- Cant find er_ages in project directory

arai_GUI initialization calling self.get_data()
calling get_data()
calling magic_read(self, infile) /Users/nebula/Python/SPD_project/magic_measurements.txt
magic data:
[{'treatment_ac_field': '0', 'treatment_dc_field_theta': '90', 'measurement_temp': '273', 'er_citation_names': 'This study', 'measurement_magn_moment': '2.01e-09', 'treatment_temp': '273', 'measurement_number': '1', 'measurement_standard': 'u', 'er_site_name': '0238x', 'er_sample_name': '0238x601104', 'treatment_dc_field_phi': '0', 'measurement_inc': '-8.8', 'er_location_name': '238', 'measurement_dec': '257.6', 'magic_experiment_name': '0238x6011043:LP-PI-TRM:LP-PI-ALT-PTRM:LP-PI-BT-MD:LP-PI-BT...
file_type magic_measurements
-I- Read magic file  /Users/nebula/Python/SPD_project/magic_measurements.txt

calling get_specs()
calling magic_read(self, infile) /Users/nebula/Python/SPD_project/rmag_anisotropy.txt
-I- Anisotropy data read  /Users/nebula/Python/SPD_project/from rmag_anisotropy.txt

calling magic_read(self, infile) /Users/nebula/Python/SPD_project/rmag_results.txt
-I- Anisotropy data read  /Users/nebula/Python/SPD_project/from rmag_anisotropy.txt

-I- Done calculating non linear TRM parameters for all specimens
calling sortarai()
calling sortarai()
calling sortarai()
calling sortarai()
calling sortarai()
calling sortarai()
-I- number of specimens in this project directory: 6

-I- number of samples in this project directory: 2

returning Data, data_hierarchy.  This is the completion of self.get_data().  printing Data['0238x5721062']
{'x_ptrm_check_starting_point': .....
done with get_data
calling get_previous_interpretation()
-I- Read pmag_specimens.txt for previouse interpretation
calling read magic file in thellier_gui_spd_lj.py
/Users/nebula/Python/SPD_project/pmag_specimens.txt
data info:  {'er_sites': {}, 'er_samples': {}, 'er_ages': {}} # last print call in gui __init__
>>>




pTRM check -- going back to a cooler temperature to see if specimen still has the same capacity to take on pTRM, or if it has been altered
pTRM tail check -- ?? assess if pTRM gained at x temp is completely removed by reheating to the same temperature.  why does this one matter??




methods had by the average specimen:
METHODS ['LT-T-I', 'LP-PI-TRM-ZI', 'LP-PI-TRM', 'LP-PI-ALT-PTRM', 'LP-PI-BT-MD', 'LP-PI-BT-IZZI']
METHODS ['LT-PTRM-MD', 'LP-PI-TRM', 'LP-PI-ALT-PTRM', 'LP-PI-BT-MD', 'LP-PI-BT-IZZI']

tgs.thing1.pars['magic_method_codes'], tgs.thing2.pars['magic_method_codes']
('LP-PI-BT-IZZI:IE-TT:LP-PI-ALT-PTRM:LP-PI-BT-MD', 'LP-PI-ZI:IE-TT:LP-PI-ALT-PTRM')



magic method codes:

LT-T-I	     Lab Treatment	Specimen cooling: In laboratory field

LP-PI-TRM    Lab Protocol		  	  Paleointensity experiment: Using a laboratory TRM. Any paleointensity experiment that uses a TRM produced in a lab controlled field. Includes all variants of the Thellier method, including the Shaw method. More details on alteration and reciprocity checks can be added using the special LP-PI-ALT and LP-PI-BT method codes. Thellier 1938.

LP-TRM	     Lab Protocol			 TRM acquisition.

LT-M-I	     Lab Treatment			Using microwave radiation: In laboratory field. Walton et al. 1993.

LP-PI-M	     Lab Protocol		       	Paleointensity experiment: Microwave demagnetization. 

LT-NO	     Lab Treatment			No treatments applied before measurement.

LT-T-Z	     Lab Treatment			Specimen cooling: In zero field. Heating the specimen to the desired temperature step and then cooling in zero ambient magnetic field. Wilson 1961, Collinson 1983.

LT-M-Z	     Lab Treatment			Using microwave radiation: In zero field. Walton et al. 1992.

LT-PTRM-Z    Lab Treatment			pTRM tail check After in laboratory field step, perform a zero field cooling at a lower temperature. After heating to a particular temperature step and cooling in field. The specimen is heated to a lower temperature step and cooled in zero field. This checks for low temperature pTRM tails. Harcombe-Smee et al. 1996.

LT-PTRM-I    Lab Treatment			 pTRM check: After zero field step, perform an in field cooling. After treatment at a particular temperature step, the specimen is then reheated to a lower temperature and cooled with the laboratory field on thus reapplying a pTRM. Coe 1967.

LT-PTRM-MD   Lab Treatment			       	     pTRM tail check: After in laboratory field step, perform a zero field cooling at same temperature. A check carried out during Thellier procedures to detect multidomain grains. Additional zero field heating steps are used to remove a previously placed pTRM. The ability to remove a prior pTRM step at the same temperature imparted is used as an indicator of reversal. Riisager & Riisager 2001, Scherbakov et al. 1993.




to do:

check get_curve()
      do proper curvature stats
      got Chernov and Lesort 2005, and matlab code.  but fuuuuuuuck this is confusing.  
      review array manipulation in numpy tutorial
      get MATLAB
ask Alex about last bit of VDS calculation
add tests for SCAT
finish IZZI_MD  # DONE (?)
       use last repeated point, not first # DONE
put IZZI_MD into spd # DONE
debug DANG # seems fine and Done
      sometimes best_fit_vector is postive where should be negative.  # DONE (or at least can't reproduce this problem....)
check giving PD direction thing (dot, R, etc.).  IMPORTANT
remaining Directional stats:
	  talk to Ron
	  use thellier magic to check up on gamma # looking good
	  figure out exactly what ChRM is
	  do theta


cart2dir
	require x,y,z
dir2cart
	works with just Dec, Inc
	however, outputs very different value if given Dec, Inc, and m (or whatever)



thellier_gui Dec, Inc, and MAD are free.  lisa always uses free


matlab SVD and numpy SVD produce nearly, but not exactly, identical output.  difference is in V, and also in the format for S (less important)
Also, checked and numpy and matlab notation for slicing is the same, except that matlab indexing starts at 1, not 0
